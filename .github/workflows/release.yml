name: Release

on:
  workflow_dispatch: 
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 7
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Prepare deps
      run: |
          sudo apt update
          sudo apt install jq
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew  --stacktrace  --info --scan assembleRelease  
    - name: Sign APK with keystore
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
         releaseDirectory: app/build/outputs/apk/release
         signingKeyBase64: ${{ secrets.KEY_STORE }}
         alias: ${{ secrets.KEY_STORE_ALIAS }}
         keyStorePassword: ${{ secrets.KEY_STORE_PASS }}
         keyPassword: ${{ secrets.KEY_STORE_PASS }}
      env:
         BUILD_TOOLS_VERSION: "34.0.0"
    - name: echo Files
      run: | 
          echo $(tree -d)
          echo "NOW=v$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
          echo "VER=$(jq -r '.[0].apkData.versionName' app/release/output.json)" >> $GITHUB_ENV
    - name: echo build dir
      run: |
        echo $(find . -type f -printf "%T@ %p\n" | sort -nr | cut -d\  -f2-)
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
          name: app-release.apk
          path: app/build/outputs/apk/release/*.apk

    - name: Upload Apk  to Release
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
         tag: ${{env.NOW}}
         artifacts: app/build/outputs/apk/release/*.apk
         allowUpdates: true
         removeArtifacts: false
         replacesArtifacts: true
         body: |
             Bazarcheh-V${{env.VER}}

    
